1. Request games for a given team like the Warriors. [DONE]
2. Filter out old dates, and sort dates by this week, next_week, and later. [DONE]
3. Have a json file with desired teams listed. [DONE]
4. Have separate structure for each sport. [DONE]
    4.1. Adapt football to new json structure. [DONE]
    4.2. Have different classes for each sport since they may use different apis and search algorithms. [DONE]
5. Include also mma events. [DONE]
6. Extend to soccer for Barca and Madrid. [DONE] (found paid key that allows 100 requests for free)
7. Have common variables for all matches. [DONE]
8. Make sure datetimes match local timezone. [DONE]
9. Central service handler should run all registered services and organize per week. [DONE]
10. Review if time is correct in all sports, split mma code into auxiliar method, rename file. [DONE]
11. Do minor improvements [DONE]
11. Have a use_case returning the dates and others producing the report. [NEXT]
12. Organize events per week instead of per team. [DONE]
13. Store resuls in DB and run script daily using task.
14. Expose endpoints.
15. Deploy solution online.



# Minor Improvements
# 1. move AllSportsService self.active to config [CANCELLED]
# 2. Remove show_old attribute Match.print_details [DONE]
# 3. Remove sort from RapidApiFootball and similars [DONE]
# 4. New method _create_match [DONE]
# 5. Also print sport_abr [DONE]
# 6. Reformat output for better clarity [DONE]